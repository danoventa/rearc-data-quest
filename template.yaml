AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  dan-rearc-dataquest
  Sample SAM Template for dan-rearc-dataquest

Resources:
  FileSyncerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/file_syncer/
      Handler: app.lambda_handler
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 60
      Environment:
        Variables:
          REARCQUESTBUCKET_BUCKET_NAME: !Ref RearcQuestBucket
          REARCQUESTBUCKET_BUCKET_ARN: !GetAtt RearcQuestBucket.Arn
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${RearcQuestBucket}
                - !Sub arn:${AWS::Partition}:s3:::${RearcQuestBucket}/*
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
              Resource:
                - '*'

  SyncAndReportStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionSubstitutions:
        FileSyncerFunctionArn: !GetAtt FileSyncerFunction.Arn
        DataSyncerFunctionArn: !GetAtt DataSyncerFunction.Arn
        ReporterFunctionArn: !GetAtt ReporterFunction.Arn
      Events:
        DailySyncSchedule:
          Type: Schedule # More info about Schedule Event Source: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-statemachine-schedule.html
          Properties:
            Description: Daily Schedule to sync data and report
            Enabled: true # This schedule is disabled by default to avoid incurring charges.
            Schedule: rate(1 day)
      Policies:
        # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref FileSyncerFunction
      Type: STANDARD
      DefinitionUri: statemachine/rearc_data_quest.asl.json
  EmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: noventa@hey.com
  DataSyncerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/data_syncer
      Handler: app.lambda_handler
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          REARCQUESTBUCKET_BUCKET_NAME: !Ref RearcQuestBucket
          REARCQUESTBUCKET_BUCKET_ARN: !GetAtt RearcQuestBucket.Arn
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${RearcQuestBucket}
                - !Sub arn:${AWS::Partition}:s3:::${RearcQuestBucket}/*
  DataSyncerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${DataSyncerFunction}
  ReporterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/reporter
      Handler: app.lambda_handler
      Runtime: python3.12
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Events:
        ReportingQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt ReportingQueue.Arn
            BatchSize: 1
      Environment:
        Variables:
          REARCQUESTBUCKET_BUCKET_NAME: !Ref RearcQuestBucket
          REARCQUESTBUCKET_BUCKET_ARN: !GetAtt RearcQuestBucket.Arn
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:GetObjectAcl
                - s3:GetObjectLegalHold
                - s3:GetObjectRetention
                - s3:GetObjectTorrent
                - s3:GetObjectVersion
                - s3:GetObjectVersionAcl
                - s3:GetObjectVersionForReplication
                - s3:GetObjectVersionTorrent
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:ListBucketVersions
                - s3:ListMultipartUploadParts
                - s3:AbortMultipartUpload
                - s3:DeleteObject
                - s3:DeleteObjectVersion
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:RestoreObject
              Resource:
                - !Sub arn:${AWS::Partition}:s3:::${RearcQuestBucket}
                - !Sub arn:${AWS::Partition}:s3:::${RearcQuestBucket}/*
  ReporterFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${ReporterFunction}
  ReportingQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 180
  RearcQuestBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-rearcques-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: alias/aws/s3
      PublicAccessBlockConfiguration:
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        QueueConfigurations:
          - Event: s3:ObjectCreated:*
            Queue: !GetAtt ReportingQueue.Arn
          - Event: s3:ObjectRemoved:*
            Queue: !GetAtt ReportingQueue.Arn
    DependsOn:
      - RearcQuestBucketToReportingQueuePermission
  RearcQuestBucketBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref RearcQuestBucket
      PolicyDocument:
        Id: RequireEncryptionInTransit
        Version: '2012-10-17'
        Statement:
          - Principal: '*'
            Action: '*'
            Effect: Deny
            Resource:
              - !GetAtt RearcQuestBucket.Arn
              - !Sub ${RearcQuestBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: 'false'
  RearcQuestBucketToReportingQueuePermission:
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: s3.amazonaws.com
            Action: sqs:SendMessage
            Resource: !GetAtt ReportingQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Sub arn:${AWS::Partition}:s3:::${AWS::StackName}-rearcques-${AWS::AccountId}
      Queues:
        - !Ref ReportingQueue

Outputs:
  # SyncAndReportStateMachine is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  SyncAndReportStateMachineArn:
    Description: Data Sync and Reporting State Machine ARN
    Value: !Ref SyncAndReportStateMachine
  SyncAndReportStateMachineRoleArn:
    Description: IAM Role created for the sync and reporting state machine.
    Value: !GetAtt SyncAndReportStateMachineRole.Arn
  RearcQuestBucketBucketArn:
    Description: RearcQuestBucketBucketArn
    Value: !GetAtt RearcQuestBucket.Arn
  DataSyncerFunctionArn:
    Description: DataSyncerFunctionArn
    Value: !GetAtt DataSyncerFunction.Arn
  FileSyncerFunctionArn:
    Description: FileSyncerFunctionArn
    Value: !GetAtt FileSyncerFunction.Arn
  ReporterFunctionArn:
    Description: ReporterFunctionArn
    Value: !GetAtt ReporterFunction.Arn